apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: set-commit-status
  namespace: cicd
spec:
  params:
  - name: GIT_REPO
    description: |
      The GitHub host, adjust this if you run a GitHub enteprise.
    default: "github.com"
    type: string

  - name: API_PATH_PREFIX
    description: |
      The API path prefix, GitHub Enterprise has a prefix e.g. /api/v3
    default: "/api/v3"
    type: string

  - name: REPO
    description: |
      The GitHub repository full name, e.g.: tektoncd/catalog
    type: string

  - name: GITHUB_TOKEN_SECRET_NAME
    description: |
      The name of the kubernetes secret that contains the GitHub token, default: github
    type: string
    default: git-host-basic-auth-token

  - name: GITHUB_TOKEN_SECRET_KEY
    description: |
      The key within the kubernetes secret that contains the GitHub token, default: token
    type: string
    default: password

  - name: COMMIT_SHA
    description: |
      Commit SHA to set the status for.
    type: string

  - name: DESCRIPTION
    description: |
      A short description of the status.
    type: string

  - name: CONTEXT
    description: |
      The GitHub context, A string label to differentiate this status from
      the status of other systems. ie: "continuous-integration/tekton"
    default: "continuous-integration/tekton"
    type: string

  - name: STATE
    description: |
      The state of the status. Can be one of the following `error`,
      `failure`, `pending`, or `success`.
    type: string
  steps:
    - name: set-status
      env:
        - name: GITHUBTOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.GITHUB_TOKEN_SECRET_NAME)
              key: $(params.GITHUB_TOKEN_SECRET_KEY)

      image: registry.access.redhat.com/ubi8/python-38:1-34.1599745032
      script: |
        #!/usr/libexec/platform-python
        import json
        import os
        import http.client
        status_url = "$(params.API_PATH_PREFIX)" + "/repos/$(params.REPO)/" + \
            "statuses/$(params.COMMIT_SHA)"
        data = {
            "state": "$(params.STATE)",
            "description": "$(params.DESCRIPTION)",
            "context": "$(params.CONTEXT)"
        }
        print("Sending this data to GitHub: ")
        print(data)
        conn = http.client.HTTPSConnection("$(params.GIT_REPO)")
        r = conn.request(
            "POST",
            status_url,
            body=json.dumps(data),
            headers={
                "User-Agent": "TektonCD, the peaceful cat",
                "Authorization": "Bearer " + os.environ["GITHUBTOKEN"],
                "Accept": "application/vnd.github.v3+json ",
            })
        resp = conn.getresponse()
        if not str(resp.status).startswith("2"):
            print("Error: %d" % (resp.status))
            print(resp.read())
        else:
          print("GitHub status '$(params.STATE)' has been set on "
                "$(params.REPO)#$(params.COMMIT_SHA) ")