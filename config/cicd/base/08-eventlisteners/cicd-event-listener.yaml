apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  creationTimestamp: null
  name: cicd-event-listener
  namespace: cicd
spec:
  serviceAccountName: pipeline
  triggers:
  - bindings:
    - name: github-binding
    interceptors:
    - github:
        secretRef:
          namespace: cicd
          secretKey: webhook-secret-key
          secretName: gitops-webhook-secret
    - cel:
        filter: header.match('X-GitHub-Event', 'push') && body.repository.full_name == 'chetan-rns/gitops' && !body.ref.endsWith(body.repository.default_branch)
        overlays:
        - key: ref
          expression: "split(body.ref, '/')[2]"
    name: ci-dryrun-from-pr
    template:
      name: ci-dryrun-from-pr-template
  - bindings:
    - name: github-binding
    interceptors:
    - github:
        secretRef:
          namespace: cicd
          secretKey: webhook-secret-key
          secretName: gitops-webhook-secret
    - cel:
        filter: (header.match('X-GitHub-Event', 'push') && body.repository.full_name
          == 'chetan-rns/gitops') && body.ref.endsWith(body.repository.default_branch)
        overlays:
        - key: ref
          expression: split(body.ref, '/')[2]
    name: cd-deploy-from-push
    template:
      name: cd-deploy-from-push-template
  - bindings:
    - name: dev-taxi-binding
    - name: github-binding
    interceptors:
    - github:
        secretRef:
          namespace: cicd
          secretKey: webhook-secret-key
          secretName: webhook-secret-dev-taxi
    - cel:
        filter: (header.match('X-GitHub-Event', 'push') && body.repository.full_name
          == 'chetan-rns/taxi')
        overlays:
        - key: ref
          expression: "split(body.ref, '/')[2]"
    name: app-ci-build-from-pr-taxi
    template:
      name: app-ci-template
status:
  configuration:
    generatedName: ""
